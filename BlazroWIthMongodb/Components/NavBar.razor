@inject NavigationManager navigator


<AuthorizeView>
    <NotAuthorized>
        <AutoRedirect/>
    </NotAuthorized>
    <Authorized>
        <MudAppBar Color="Color.Primary" Fixed="false" Dense="true">
            <MudText Color="Color.Inherit">Blazor Authentication with mongodb</MudText>
            <MudSpacer/>
            <MudIconButton Icon="@Icons.Material.Rounded.AccountBox" Color="Color.Inherit" OnClick="ToggleOpen"/>
            <MudPopover Open="@_isOpen" Fixed="true" Class="px-4 pt-4" OverflowBehavior="OverflowBehavior.FlipOnOpen" AnchorOrigin="Origin.BottomRight">
                <div class="d-flex flex-column">
                    <MudText></MudText>
                    <MudNavMenu Class="mud-width-full">
                        <MudText Typo="Typo.h6" Class="px-4">Authenticated user</MudText>
                        <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">@context.User.Identity.Name</MudText>
                        <MudDivider Class="my-2"/>
                        <MudNavLink OnClick="@LogOut" Icon="@Icons.Material.Filled.Logout">Logout</MudNavLink>
                        <MudNavLink Href="/settings" Icon="@Icons.Material.Filled.Settings">Settings</MudNavLink>
                        <MudNavLink Href="/About" Icon="@Icons.Material.Filled.QuestionMark">About</MudNavLink>
                    </MudNavMenu>
                </div>
            </MudPopover>
        </MudAppBar>
    </Authorized>
</AuthorizeView>


@code {

    public bool _isOpen;

    public void ToggleOpen()
    {
        if (_isOpen)
            _isOpen = false;
        else
            _isOpen = true;
    }

    void LogOut()
    {
        try
        {
            navigator.NavigateTo("/Identity/Account/Logout", true);
            ToggleOpen();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            ToggleOpen();
        }
    }

}